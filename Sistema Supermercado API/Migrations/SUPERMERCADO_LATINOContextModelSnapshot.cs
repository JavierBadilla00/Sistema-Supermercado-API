// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sistema_Supermercado_API.Entity;

namespace Sistema_Supermercado_API.Migrations
{
    [DbContext(typeof(SUPERMERCADO_LATINOContext))]
    partial class SUPERMERCADO_LATINOContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.CarritoCompras", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Idcliente")
                        .IsRequired()
                        .HasColumnName("IDCliente")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Idproducto")
                        .IsRequired()
                        .HasColumnName("IDProducto")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Idcliente");

                    b.HasIndex("Idproducto");

                    b.ToTable("CarritoCompras");
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.CategoriaProducto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CategoriaProducto");
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.Clientes", b =>
                {
                    b.Property<string>("Cedula")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Cedula");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.Cuentas", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Idtipo")
                        .IsRequired()
                        .HasColumnName("IDTipo")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("NumeroCuenta")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Idtipo");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.DetalleVenta", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Idproducto")
                        .IsRequired()
                        .HasColumnName("IDProducto")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(29, 2)")
                        .HasComputedColumnSql("([PrecioUnitario]*[Cantidad])");

                    b.HasKey("Id");

                    b.HasIndex("Idproducto");

                    b.ToTable("DetalleVenta");
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.Empleados", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Idcuenta")
                        .IsRequired()
                        .HasColumnName("IDCuenta")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Idtipo")
                        .IsRequired()
                        .HasColumnName("IDTipo")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Codigo");

                    b.HasIndex("Idcuenta");

                    b.HasIndex("Idtipo");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.Envios", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Destinatario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Idcarrito")
                        .IsRequired()
                        .HasColumnName("IDCarrito")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Idcarrito");

                    b.ToTable("Envios");
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.Productos", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Idcategoria")
                        .IsRequired()
                        .HasColumnName("IDCategoria")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Idproveedor")
                        .IsRequired()
                        .HasColumnName("IDProveedor")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("Idcategoria");

                    b.HasIndex("Idproveedor");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.Proveedores", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("NombreTipo")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.SociosComerciales", b =>
                {
                    b.Property<string>("CodigoTarjeta")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Idproducto")
                        .IsRequired()
                        .HasColumnName("IDProducto")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("CodigoTarjeta")
                        .HasName("PK_SocioComercial");

                    b.HasIndex("Idproducto");

                    b.ToTable("SociosComerciales");
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.Tarjeta", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Idcliente")
                        .IsRequired()
                        .HasColumnName("IDCliente")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Idtipo")
                        .IsRequired()
                        .HasColumnName("IDTipo")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime>("Vencimiento")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("Idcliente");

                    b.HasIndex("Idtipo");

                    b.ToTable("Tarjeta");
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.TipoCuenta", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("TipoCuenta");
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.TipoEmpleado", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("NombrePuesto")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("TipoEmpleado");
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.TipoTarjeta", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("TipoTarjeta");
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.CarritoCompras", b =>
                {
                    b.HasOne("Sistema_Supermercado_API.Entity.Clientes", "IdclienteNavigation")
                        .WithMany("CarritoCompras")
                        .HasForeignKey("Idcliente")
                        .HasConstraintName("FK_ClienteC")
                        .IsRequired();

                    b.HasOne("Sistema_Supermercado_API.Entity.Productos", "IdproductoNavigation")
                        .WithMany("CarritoCompras")
                        .HasForeignKey("Idproducto")
                        .HasConstraintName("FK_ProductoC")
                        .IsRequired();
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.Cuentas", b =>
                {
                    b.HasOne("Sistema_Supermercado_API.Entity.TipoCuenta", "IdtipoNavigation")
                        .WithMany("Cuentas")
                        .HasForeignKey("Idtipo")
                        .HasConstraintName("FK_Tipo_Cuenta")
                        .IsRequired();
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.DetalleVenta", b =>
                {
                    b.HasOne("Sistema_Supermercado_API.Entity.Productos", "IdproductoNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("Idproducto")
                        .HasConstraintName("FK_ProductoD")
                        .IsRequired();
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.Empleados", b =>
                {
                    b.HasOne("Sistema_Supermercado_API.Entity.Cuentas", "IdcuentaNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("Idcuenta")
                        .HasConstraintName("FK_Cuentas")
                        .IsRequired();

                    b.HasOne("Sistema_Supermercado_API.Entity.TipoEmpleado", "IdtipoNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("Idtipo")
                        .HasConstraintName("FK_Empleados")
                        .IsRequired();
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.Envios", b =>
                {
                    b.HasOne("Sistema_Supermercado_API.Entity.CarritoCompras", "IdcarritoNavigation")
                        .WithMany("Envios")
                        .HasForeignKey("Idcarrito")
                        .HasConstraintName("FK_Carrito")
                        .IsRequired();
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.Productos", b =>
                {
                    b.HasOne("Sistema_Supermercado_API.Entity.CategoriaProducto", "IdcategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("Idcategoria")
                        .HasConstraintName("FK_Categoria")
                        .IsRequired();

                    b.HasOne("Sistema_Supermercado_API.Entity.Proveedores", "IdproveedorNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("Idproveedor")
                        .HasConstraintName("FK_Proveedor")
                        .IsRequired();
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.SociosComerciales", b =>
                {
                    b.HasOne("Sistema_Supermercado_API.Entity.Productos", "IdproductoNavigation")
                        .WithMany("SociosComerciales")
                        .HasForeignKey("Idproducto")
                        .HasConstraintName("FK_ProductoS")
                        .IsRequired();
                });

            modelBuilder.Entity("Sistema_Supermercado_API.Entity.Tarjeta", b =>
                {
                    b.HasOne("Sistema_Supermercado_API.Entity.Clientes", "IdclienteNavigation")
                        .WithMany("Tarjeta")
                        .HasForeignKey("Idcliente")
                        .HasConstraintName("FK_ClienteT")
                        .IsRequired();

                    b.HasOne("Sistema_Supermercado_API.Entity.TipoTarjeta", "IdtipoNavigation")
                        .WithMany("Tarjeta")
                        .HasForeignKey("Idtipo")
                        .HasConstraintName("FK_TipoTarjeta")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
